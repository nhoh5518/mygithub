package com.example.study.controller;

import com.example.study.model.SearchParam;
import org.springframework.web.bind.annotation.*;

@RestController
@RequestMapping("/api") //주소가 겹치는게 있으면 에러(클래스끼리는 상관없음) 
public class PostController {

    //HTML <Form>태그 사용시
    //ajax 검색 때 사용
    //@RequestBody : http post body -> data
    // json, xml, multipart-form / text-plain

    //@RequestMapping(method = RequestMethod.POST, path = "/postMethod")
    @PostMapping(value = "/postMethod")
    public SearchParam postMethod(@RequestBody SearchParam searchParam){
        return searchParam;
    }

    @PutMapping("/putMethod")
    public void put(){

    }

    @PatchMapping("/patchMethod")
    public void patch(){

    }
}

//GET Method(조회)
// - 주소창에 파라미터가 노출된다.
// - Example : www.localhost:8080/search?id=account&password=1234
//           : www.google.com/search?id=abcd
// - 브라우저에서 주소에 대한 캐시가 이루어 지므로, 정보를 얻을 때 사용한다.
//POST Method(생성)
// - 주소 창에 파라미터가 노출 되지 않는다.
// - Example : www.localhost:8080/search
//           : www.google.com/search
// - 주소 창에 사용자의 요청사항이 노출되지 않는다.
//   Get 방식에서는 주소 길이 제한이 있지만 POST는 그보다 길게 사용가능(제한존재)
//   브라우저가 주소 캐시를 하지 못하는 특성이 있다.

//PUT/PATCH Method(수정)
// - POST와 마찬가지로 BODY에 데이터가 들어 있으며, 주로 업데이트에 사용한다.

//DELETE Method(삭제)
// - Get과 마찬가지로 주소에 파라미터가 들어가며, 데이터를 삭제 할 때 사용한다.
